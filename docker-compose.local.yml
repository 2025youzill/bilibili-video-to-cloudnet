version: "3.8"

services:
  banked:
    image: bvtc-banked:latest
    container_name: bvtc-banked-container
    build:
      context: ./banked
      dockerfile: Dockerfile
      args:
        GOPROXY: "https://goproxy.cn,direct"
    environment:
      - GIN_MODE=release
      - TZ=Asia/Shanghai
      - GOMODCACHE=/go/pkg/mod
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=local_redis_password_123
      - REDIS_DB=1
      - SESSION_SECRET=local_session_secret_key_change_this_in_production
      - LOG_LEVEL=info
      - APP_ENV=development
      - APP_PORT=8080
      - LOG_PATH=./log/logs/app.log
      - NETEASE_API_COOKIE_FILEPATH=./user/data
      - NETEASE_API_COOKIE_INTERVAL=24h
      - ALLOWED_FILE_TYPES=mp3,mp4,wav,flac
      - CORS_ALLOWED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000
      - CORS_ALLOWED_METHODS=GET,POST,PUT,OPTIONS
      - CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "/dev/null", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    volumes:
      - ./banked/log/logs:/banked/log/logs:rw
      - ./banked/user/data:/banked/user/data:rw
      - ./banked/config:/banked/config:ro
      - /tmp/bvtc:/banked/file:rw
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  fronted:
    image: bvtc-fronted:latest
    container_name: bvtc-fronted-container
    build:
      context: ./fronted
      dockerfile: Dockerfile.local
    ports:
      - "8000:80" # 本地访问端口 8000
    environment:
      - NODE_ENV=production
    depends_on:
      banked:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./fronted/nginx.local.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: bvtc-redis
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "local_redis_password_123"]
    environment:
      - REDIS_PASSWORD=local_redis_password_123
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", 'redis-cli -a "local_redis_password_123" --raw incr ping']
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: app_network
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"

volumes:
  redis-data:
