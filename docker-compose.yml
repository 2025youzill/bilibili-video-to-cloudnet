version: "3.8"

services:
  banked:
    image: bvtc-banked:latest
    container_name: bvtc-banked-container
    build:
      context: ./banked
      dockerfile: Dockerfile
      args:
        GOPROXY: "https://goproxy.cn,direct"
    env_file:
      - .env
    environment:
      - GIN_MODE=release
      - TZ=Asia/Shanghai
      - GOMODCACHE=/go/pkg/mod
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB:-1}
      - SESSION_SECRET=${SESSION_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - APP_ENV=${APP_ENV:-production}
      - APP_PORT=${APP_PORT:-8080}
      - LOG_PATH=${LOG_PATH:-./log/logs/app.log}
      - NETEASE_API_COOKIE_FILEPATH=${NETEASE_API_COOKIE_FILEPATH:-./user/data}
      - NETEASE_API_COOKIE_INTERVAL=${NETEASE_API_COOKIE_INTERVAL:-24h}
      - ALLOWED_FILE_TYPES=${ALLOWED_FILE_TYPES:-mp3,mp4,wav,flac}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://youzill.top}
      - CORS_ALLOWED_METHODS=${CORS_ALLOWED_METHODS:-GET,POST,PUT}
      - CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS:-Content-Type,Authorization,X-Requested-With}
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "/dev/null", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    volumes:
      - ./banked/log/logs:/banked/log/logs:rw
      - ./banked/user/data:/banked/user/data:rw
      - ./banked/config:/banked/config:ro
      - /tmp/bvtc:/banked/file:rw
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.25"
          memory: 256M

  fronted:
    image: bvtc-fronted:latest
    container_name: bvtc-fronted-container
    build:
      context: ./fronted
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    depends_on:
      banked:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
      - ./webroot:/var/www/html:ro
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M

  redis:
    image: redis:alpine
    container_name: bvtc-redis
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", 'redis-cli -a "$REDIS_PASSWORD" --raw incr ping']
      interval: 30s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: app_network
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"

volumes:
  redis-data:
